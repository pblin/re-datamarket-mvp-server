
# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/node:10.15.0
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: run yarn
          command: |
            cd ~/app/api-server && yarn 
            cd ~/app/order-processor && yarn
 
  deploy:
    machine: 
      docker_layer_caching: true
      image: circleci/classic:201808-01
    production:
    branch: master
    steps:
      - checkout
      - run:
          name: Build and push Docker image
          command: |
            scp mvp@demo-app.rebloc.io:/var/local/democonfig/server/.env.prod api-server/.env
            scp mvp@demo-app.rebloc.io:/home/mvp/tls/* api-server/
            cd api-server && docker build --rm -t bernardlin/apiserver:beta -f Dockerfile.apiserver .
            cd order-processor && docker build --rm -t bernardlin/orderprocessor:beta -f Dockerfile.orderprocessor .
            docker login -u $DOCKER_LOGIN --password $DOCKER_PWD 
            docker push bernardlin/apiserver:beta
            docker push bernardlin/orderprocessor:beta
      - run:
          name: start up docker
          command: |
            rsh  mvp@demo-app.rebloc.io "if [ ! -d 'webapp/server/' ]; then mkdir -p webapp/server/; fi"
            scp api-server/run_api_server.sh mvp@demo-app.rebloc.io:/home/mvp/webapp/server/
            scp order-processor/run_order_processor.sh mvp@demo-app.rebloc.io:/home/mvp/webapp/server/
            rsh mvp@demo-app.rebloc.io "docker pull bernardlin/apiserver:beta && bash /home/mvp/webapp/server/run_api_server.sh bernardlin/apiserver:beta"
            rsh mvp@demo-app.rebloc.io "docker pull bernardlin/orderprocessor:beta && bash /home/mvp/webapp/server/run_order_prcessor.sh bernardlin/orderprocessor:beta"
            rsh mvp@demo-app.rebloc.io "docker system prune -f "
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test